@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@model List<IdentityUser>

@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="admin-dashboard">
    <div class="dashboard-header">
        <h1><i class="fas fa-shield-alt"></i> Admin Dashboard</h1>
        <p class="dashboard-subtitle">Manage users and monitor system activity</p>
    </div>

    <!-- Statistics Cards -->
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-users"></i>
            </div>
            <div class="stat-content">
                <h3>@ViewBag.UserCount</h3>
                <p>Total Users</p>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-tasks"></i>
            </div>
            <div class="stat-content">
                <h3>@ViewBag.TasksCount</h3>
                <p>Total Tasks</p>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-user-shield"></i>
            </div>
            <div class="stat-content">
                <h3>@(Model.Count(u => UserManager.IsInRoleAsync(u, "Admin").Result))</h3>
                <p>Admin Users</p>
            </div>
        </div> 

        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-chart-line"></i>
            </div>
            <div class="stat-content">
                <h3>@(ViewBag.TasksCount > 0 ? (ViewBag.TasksCount / ViewBag.UserCount).ToString("0.0") : "0")</h3>
                <p>Avg Tasks/User</p>
            </div>
        </div>
    </div>

    

<div class="users-table-container">
<table class="users-table">
    <thead>
        <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Email Confirmed</th>
            <th>Current Role</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            var userRoles = await UserManager.GetRolesAsync(user);
            var currentRole = userRoles.FirstOrDefault() ?? "User";
            <tr>
                <td>
                    <i class="fas fa-user"></i>@user.UserName
                 @if (user.UserName == User.Identity?.Name)
                    {
                        <strong style="color: red;">(You)</strong>
                    }
                </td>
                <td class="user-email">
                    <i class="fas fa-envelope"></i>@user.Email
                 @if (user.Email == User.Identity?.Name)
                    {
                        <strong style="color: red;">(You)</strong>
                    }
                </td>
                <td>
                   <span class="status-badge @(user.EmailConfirmed ? "confirmed" : "pending")">
                        @(user.EmailConfirmed ? "Confirmed" : "Pending")
                         </span>
                </td>
                <td>
                                <span class="role-badge @currentRole.ToLower()">
                                    @currentRole
                                </span>
                            </td>
                            <td class="user-actions">
                                <form asp-action="SetRole" method="post" class="role-form">
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <select name="role" class="role-select" onchange="this.form.submit()">
                                        <option value="User" selected="@(currentRole == "User")">User</option>
                                        <option value="Admin" selected="@(currentRole == "Admin")">Admin</option>
                                    </select>
                                </form>
                            </td>
                        </tr>
        }
    </tbody>
</table>
</div>